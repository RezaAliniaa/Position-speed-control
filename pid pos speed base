
#include <PID_v1.h>

const int freq = 20000;
const int pwmChannel = 0;
const int resolution = 8;

#define ENCODER_A 34
#define ENCODER_B 35

#define MOTOR_pin1  26
#define MOTOR_pin2 27
#define MOTOR_pwm 12

double Kp=4.8, Ki=10, Kd=0.01 ,pos_SetPoint, pos_InPut, pos_OutPut;
double kp = 5 , ki = 1 , kd = 0.01 ,speed_input = 0, speed_output = 0, speed_setpoint = 0;   //speed p,i,d


int encoder_pulse=0;
volatile long int encoder_count = 0; 
unsigned int integerValue = 0;
char incomingByte; 
int motor_pwm_value = 0; 
int op=0;

PID pid_pos_controller(&pos_InPut,&pos_OutPut,&pos_SetPoint,Kp,Ki,Kd,DIRECT);
PID pid_speed_control(&speed_input, &speed_output, &speed_setpoint, kp, ki, kd, DIRECT);  



void setup() {
  
  Serial.begin(115200); 
  pinMode(ENCODER_A, INPUT_PULLUP); 
  pinMode(ENCODER_B, INPUT_PULLUP); 
  pinMode(MOTOR_pin1, OUTPUT); 
  pinMode(MOTOR_pin2, OUTPUT);
  pinMode (MOTOR_pwm,OUTPUT); 

  digitalWrite(MOTOR_pwm,LOW);

  ledcSetup(pwmChannel, freq, resolution); 
  ledcAttachPin(MOTOR_pwm, 0); //(enable1Pin, pwmChannel)
  attachInterrupt(digitalPinToInterrupt(ENCODER_A), encoder, RISING); // intrrupt for counting encoder pulse

  pid_pos_controller.SetMode(AUTOMATIC);
  pid_pos_controller.SetSampleTime(1);
  pid_pos_controller.SetOutputLimits(-255, 255);

  pid_speed_control.SetMode(AUTOMATIC);
  pid_speed_control.SetSampleTime(1);
  pid_speed_control.SetOutputLimits(-255, 255);
}

void loop() {
  while (Serial.available() > 0) {
    integerValue = Serial.parseInt(); 
    incomingByte = Serial.read(); 
    if (incomingByte == '\n') 
      continue;
  }

  Serial.print(F("SetPoint=")); 
  Serial.println(integerValue); 
  //-------------------------------------pid setups
  pos_SetPoint=integerValue; //ست کردن ست پوینت برای پوز از سریال
  encoder_pulse=encoder_count/6;
  pos_InPut=encoder_pulse;
 
//   speed_input=pos_OutPut;   //میاد مقدار پی دبلیو ام رو از پوزیشن کنترل میگیره 
//   speed_setpoint=120
  motor_pwm_value = pos_OutPut;


  Serial.print(F("PWM Output= "));
  Serial.print(motor_pwm_value); 
  Serial.print("      ");
  

  if (motor_pwm_value > 0) 
    motor_ccw(motor_pwm_value);
  else 
    motor_cw(abs(motor_pwm_value));
    
    
  Serial.print(F("Encoder Pulse count= "));
  Serial.println(encoder_count/6);
  pid_pos_controller.Compute();
  
//  Serial.print(F("PID output= "));
//  Serial.println(OutPut);
  Serial.println('\n');
}






void encoder() { //-----------------------Encoder Count
  if (digitalRead(ENCODER_B) == HIGH) 
    encoder_count++; 
  else 
    encoder_count--;  
}


void motor_cw(int power) {
  
  if (power > 1) {
    ledcWrite(pwmChannel, power);   
    // analogWrite(MOTOR_CW, power); //rotate the motor if the value is grater than 100
    digitalWrite(MOTOR_pin1, HIGH);
    digitalWrite(MOTOR_pin2, LOW);
     
  }
  else {
    // both of the pins are set to low    
    digitalWrite(MOTOR_pin1, LOW);
    digitalWrite(MOTOR_pin2, LOW);
  }
}

void motor_ccw(int power) {
  if (power > 1) {
    ledcWrite(pwmChannel, power);
    digitalWrite(MOTOR_pin1, LOW);
    digitalWrite(MOTOR_pin2, HIGH);
  }
  else {
    digitalWrite(MOTOR_pin1, LOW);
    digitalWrite(MOTOR_pin2, LOW);
  }
}
